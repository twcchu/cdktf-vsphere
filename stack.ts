import { Construct } from "constructs";
import { TerraformStack } from "cdktf";

/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as vsphere from "./.gen/providers/vsphere";

interface cdktfVsphereProps {
  user: string,
  password: string
}

export class MyStack extends TerraformStack {
  constructor(scope: Construct, name: string, props: cdktfVsphereProps) {
    super(scope, name);

    // define resources here

    new vsphere.VsphereProvider(this, "vsphere", {
      allowUnverifiedSsl: true,
      user: props.user,
      password: props.password,
      vsphereServer: "vcenter.lab1.bwnet.us",
    });

    const datacenter = new vsphere.DataVsphereDatacenter(
      this,
      "datacenter",
      {
        name: "lab",
      }
    );

    const datastore = new vsphere.DataVsphereDatastore(this, "datastore", {
      name: "vsphere_lab2_vsidata_ds_1",
      datacenterId: datacenter.id,
    });

    const network = new vsphere.DataVsphereNetwork(this, "network", {
      datacenterId: datacenter.id,
      name: "LAB1-DC-APP7",
    });

    const resourcepool = new vsphere.DataVsphereResourcePool(this, "pool", {
      datacenterId: datacenter.id,
      name: "rp-team-systems_platform",
    });

    const template_vm = new vsphere.DataVsphereVirtualMachine(this, "template_vm", {
      name: "packer-centos-7",
      datacenterId: datacenter.id,
    })

    new vsphere.VirtualMachine(this, "vm", {
      datastoreId: datastore.id,
      disk: [
        {
          label: "disk0",
          size: 32,
        },
      ],
      guestId: template_vm.guestId,
      name: "hello",
      networkInterface: [
        {
          networkId: network.id,
        },
      ],
      resourcePoolId: resourcepool.id,
      clone: {
        templateUuid: template_vm.id,
      },
    });

    // new RemoteBackend(this, {
    //   hostname: "app.terraform.io",
    //   organization: "bw-systems",
    //   workspaces: {
    //     name: "cdktf-vsphere"
    //   },
    // });
  }
}

